
service: pawsometime-backend-users

provider:
  name: aws
  runtime: nodejs12.x
  profile: serverless-admin
  region: us-west-2
  memorySize: 512
  environment:
    TIP_POSTS_TABLE: pawsometime-backend-posts-tip
    QNA_POSTS_TABLE: pawsometime-backend-posts-qna
    TRADE_POSTS_TABLE: pawsometime-backend-posts-trade
    GENERAL_POSTS_TABLE: pawsometime-backend-posts-general
    MEETUPS_TABLE: pawsometime-backend-meetups-meetups
    USERS_TABLE: pawsometime-backend-users-users
    NEWS_TABLE: pawsometime-backend-others-news
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TIP_POSTS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.QNA_POSTS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TRADE_POSTS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.GENERAL_POSTS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.MEETUPS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.NEWS_TABLE}"
    - Effect: Allow
      Action:
        - "s3:*"
      Resource: 
        - "*"

functions:
  # users endpoints
  # createUsers:
  #   handler: users/create.create
  #   events:
  #     - http:
  #         path: users
  #         method: post
  #         cors: true

  listUsers:
    handler: users/list.list
    events:
      - http:
          path: users
          method: get
          cors: true

  getUsers:
    handler: users/get.get
    events:
      - http:
          path: users/{id}
          method: get
          cors: true

  updateUsers:
    handler: users/update.update
    events:
      - http:
          path: users/{id}
          method: put
          cors: true
          authorizer:
            name: cognito-token-authorization
            arn: arn:aws:cognito-idp:us-west-2:095515517792:userpool/us-west-2_blgzK1ffC
  
  deleteUsers:
    handler: users/delete.delete
    events:
      - http:
          path: users/{id}
          method: delete
          cors: true
          authorizer:
            name: cognito-token-authorization
            arn: arn:aws:cognito-idp:us-west-2:095515517792:userpool/us-west-2_blgzK1ffC

  friendsRequest:
    handler: users/friends.request
    events:
      - http:
          path: users/friends/request
          method: post
          cors: true
          authorizer:
            name: cognito-token-authorization
            arn: arn:aws:cognito-idp:us-west-2:095515517792:userpool/us-west-2_blgzK1ffC
      
  friendsAccept:
    handler: users/friends.accept
    events:
      - http:
          path: users/friends/accept
          method: post
          cors: true
          authorizer:
            name: cognito-token-authorization
            arn: arn:aws:cognito-idp:us-west-2:095515517792:userpool/us-west-2_blgzK1ffC

  friendsReject:
    handler: users/friends.reject
    events:
      - http:
          path: users/friends/reject
          method: post
          cors: true
          authorizer:
            name: cognito-token-authorization
            arn: arn:aws:cognito-idp:us-west-2:095515517792:userpool/us-west-2_blgzK1ffC

  friendsCancel:
    handler: users/friends.cancel
    events:
      - http:
          path: users/friends/cancel
          method: post
          cors: true
          authorizer:
            name: cognito-token-authorization
            arn: arn:aws:cognito-idp:us-west-2:095515517792:userpool/us-west-2_blgzK1ffC

  friendsRemove:
    handler: users/friends.remove
    events:
      - http:
          path: users/friends/remove
          method: post
          cors: true
          authorizer:
            name: cognito-token-authorization
            arn: arn:aws:cognito-idp:us-west-2:095515517792:userpool/us-west-2_blgzK1ffC
  
  # pre-signup trigger
  preSignupTrigger:
    handler: users/preSignupTrigger.preSignupTrigger

resources:
  Resources:
    # users table
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.USERS_TABLE}
